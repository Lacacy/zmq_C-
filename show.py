"""
这个文件用于接收服务器端发送的图像数据并显示, 最好在客户端运行
"""
import zmq
import sys
import numpy as np
import cv2





# ZMQ (ZeroMQ) 是一个轻量级、高性能的消息队列库，它可以通过网络或本地进程间通信，支持多种协议。在计算机网络层面，ZMQ的工作原理可以分为以下几个部分：

# 套接字接口：ZMQ提供了一组类似于传统的TCP和UDP套接字的接口，用于创建不同类型的通信模式，如请求-应答、发布-订阅等。这些套接字可以在网络上进行通信，并通过不同的协议进行数据传输。

# 传输协议：ZMQ的传输层提供了多种底层传输协议的支持，包括TCP、UDP、inproc等。这些协议可以根据具体的应用场景进行选择，从而实现不同的网络通信模式。

# 消息队列管理：ZMQ使用消息队列来存储和传输消息，从而实现高性能和可靠的消息传递。它通过消息队列管理来确保消息的正确传递和处理，并提供了多种消息传递模式，如点对点、发布-订阅等。

# 多线程和并发处理：ZMQ提供了多线程和并发处理的支持，可以在不同的线程中同时处理不同的任务。这些线程可以通过使用套接字进行通信，从而实现多线程和并发处理。
# - 总的来说，ZMQ通过封装传输层协议和消息队列管理，提供了一种高性能、可靠、灵活的消息传递机制。它的工作原理是通过使用套接字进行通信，并提供多种不同的通信模式和传输协议，从而满足不同的应用场景。同时，它还提供了多线程和并发处理的支持，可以方便地进行并发任务处理。


# ZMQ 如何进行网络通信
# ZMQ（ZeroMQ）是一种高性能、异步、消息驱动的网络通信库，它支持多种传输协议和通信模式，可以用于实现复杂的网络通信应用。下面是ZMQ进行网络通信的主要步骤：
# 创建上下文（Context）：在使用ZMQ进行网络通信前，需要创建一个上下文对象。上下文是ZMQ的基本组件，负责管理所有套接字（Socket）和相关的线程。在创建上下文时，可以设置一些参数，如线程池大小、最大线程数等。
# 创建套接字（Socket）：ZMQ使用套接字进行通信，因此在进行网络通信前，需要创建一个或多个套接字。套接字是ZMQ网络通信的基本单元，用于定义通信协议、传输方式和通信模式等。
# 绑定（Bind）或连接（Connect）套接字：在创建套接字后，需要将其绑定到一个本地端口或连接到一个远程端口。这一步通常分为两个步骤：首先使用Bind方法将套接字绑定到一个本地端口，然后使用Connect方法将套接字连接到一个远程端口。
# 发送和接收消息：在套接字创建并连接好之后，可以使用Send和Receive方法发送和接收消息。发送和接收消息是ZMQ进行网络通信的核心功能，ZMQ支持多种发送和接收模式，如点对点、发布-订阅等。
# 关闭套接字和上下文：在通信结束后，需要关闭套接字和上下文对象，释放相关资源。
# 需要注意的是，ZMQ并不关心底层传输协议和网络连接，而是将这些底层细节封装在套接字和上下文对象中。因此，ZMQ可以使用多种传输协议，如TCP、UDP、inproc等，并支持多种通信模式，如请求-应答、发布-订阅等。这种设计使得ZMQ的网络通信非常灵活，可以适应不同的应用场景。



# 0.0.0.0是一个特殊的IP地址，表示所有有效IP地址的未指定地址，也被称为通配地址(wildcard address)。它在网络编程中有重要的作用。
# 当一个服务进程在服务器上监听网络连接时，它需要绑定到一个特定的IP地址和端口号上。通常情况下，程序员需要显式地指定IP地址，以确保服务只绑定到指定的地址上。但是，如果服务需要监听所有可用的IP地址，那么可以将IP地址设置为0.0.0.0，这样服务将绑定到所有可用的IP地址上。
# 在实际应用中，0.0.0.0常常被用作服务器的地址，表示服务器可以接受来自任何IP地址的连接请求。例如，在Web服务器中，如果需要将服务器上的网站公开访问，就需要将服务器监听地址设置为0.0.0.0。
# 需要注意的是，0.0.0.0并不是一个可被分配的IP地址，不能用于直接通信。它只是一个特殊的符号，用于指示所有有效IP地址。



# connect       连接服务器端, 在客户端之中, 本地的端口为：tcp://127.0.0.1:15556，或者  tcp://localhost:15556
# 127.0.0.1 回环地址，表示本机地址，localhost 也是本机地址，但是在某些情况下，localhost 会被解析为

# 1 本机IP
# - 电脑主板上都内置了多种网卡，一般主要有以下几类：
#   虚拟网卡(loopback)
#   注意，它是虚拟的，并不是物理网卡，也被称为是本地环回地址(或接口)，一般将127.0.0.1 作为本地环回地址。
# - 有线网卡/以太网卡(Ethernet)
#   这是以太网(局域网)使用的，日常说的网卡指的就是这个，插入的就是网线。
# - 无线网卡(WLAN)
#   这是无线局域网所使用的网卡，笔记本上常内置此网卡，它用的是无线电技术，不需要像以太网卡那样插网线

# 2 localhost 
# localhost 是一种特殊的域名
# localhost 它并不是 IP，而是一种特殊的域名(没有后缀)，默认的情况下它解析到的是本地 IP(127.0.0.1)，
# 主要通过本机的 host 文件进行管理，如果愿意，也可以把 localhost 域名解析到某个公网 IP 上去。

# 3 127.0.0.1
# - 127.0.0.1 是一种本机保留的私有 IP
# - 127.0.0.1 它是一个私有 IP，代表的就是本机环回地址，其实本质上是绑定在虚拟网卡(loopback)上的 IP

context = zmq.Context()                           #  zmq context   创建zmq上下文
socket = context.socket(zmq.REQ)                  #  zmq socket    创建zmq套接字
socket.connect("tcp://127.0.0.1:15556")           
while True:
	socket.send(b"a")
	data = socket.recv()

	image = cv2.imdecode(np.frombuffer(data, dtype=np.uint8), 1)
	cv2.imshow("image", image)
	key = cv2.waitKey(0)

	if key & 0xFF == ord('q'):
		break